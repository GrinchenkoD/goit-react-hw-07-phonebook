{"version":3,"sources":["components/contactsFilter/ContactFilter.module.css","components/contactForm/ContactForm.module.css","redux/contacts/contacts.actions.js","redux/contacts/contacts.operations.js","redux/contacts/contacts.selectors.js","components/contactForm/ContactForm.jsx","components/contactsFilter/ContactFilter.jsx","components/contactList/ContactList.jsx","components/App.js","redux/contacts/contacts.reducer.js","redux/root.reducer.js","redux/store.js","index.js","components/contactList/ContactList.module.css"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","filterChange","axios","defaults","baseURL","addContact","contact","dispatch","a","post","data","filteredContacts","state","contacts","items","filter","name","toLowerCase","includes","allContacts","getFilter","InitialState","phone","ContactForm","handleChange","event","target","setState","value","handleSubmit","preventDefault","props","some","alert","this","className","styles","container","title","onSubmit","form","htmlFor","label","id","type","onChange","placeholder","required","input","submitBtn","Component","mapDispatchToProps","connect","ContactList","handleDelete","closest","dataset","removeContact","getContacts","length","list","map","data-id","item","textThumb","text","onClick","deleteBtn","noContacts","PureComponent","get","delete","status","App","contactsReducer","createReducer","_","action","payload","filterReducer","loadingReducer","cleanError","handleError","errorReducer","rootReducer","combineReducers","loading","error","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.780db11a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__2hKpc\",\"label\":\"ContactFilter_label__2olPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1Yoej\",\"title\":\"ContactForm_title__jEyeS\",\"input\":\"ContactForm_input__2WXoH\",\"label\":\"ContactForm_label__2ngQ2\",\"submitBtn\":\"ContactForm_submitBtn__5mepP\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// =========  get contacts  ========\r\nconst getContactsRequest = createAction(\"contacts/get-contacts-request\");\r\nconst getContactsSuccess = createAction(\"contacts/get-contacts-success\");\r\nconst getContactsError = createAction(\"contacts/get-contacts-error\");\r\n\r\n//=========== add contact ==============\r\n\r\nconst addContactRequest = createAction(\"contacts/add-contact-request\");\r\nconst addContactSuccess = createAction(\"contacts/add-contact-success\");\r\nconst addContactError = createAction(\"contacts/add-contact-error\");\r\n\r\n//=========== delete contact ==============\r\nconst removeContactRequest = createAction(\"contacts/remove-contact-request\");\r\nconst removeContactSuccess = createAction(\"contacts/remove-contact-success\");\r\nconst removeContactError = createAction(\"contacts/remove-contact-error\");\r\n// =============== patch contact ==================\r\n\r\nconst filterChange = createAction(\"contacts/filter-change\");\r\n\r\nexport {\r\n  filterChange,\r\n  removeContactError,\r\n  removeContactSuccess,\r\n  removeContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  getContactsError,\r\n  getContactsSuccess,\r\n  getContactsRequest,\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  removeContactError,\r\n  removeContactSuccess,\r\n  removeContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  getContactsError,\r\n  getContactsSuccess,\r\n  getContactsRequest,\r\n} from \"./contacts.actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nconst getContacts = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (contact) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst removeContact = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    const { status } = await axios.delete(`/contacts/${id}`);\r\n    if (status === 200) {\r\n      dispatch(removeContactSuccess(id));\r\n    }\r\n  } catch (error) {\r\n    dispatch(removeContactError(error));\r\n  }\r\n};\r\n\r\nexport { getContacts, addContact, removeContact };\r\n","const filteredContacts = (state) =>\r\n  state.contacts.items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n  );\r\n\r\nconst allContacts = (state) => state.contacts.items;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nexport { filteredContacts, allContacts, getFilter };\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addContact } from '../../redux/contacts/contacts.operations'\r\nimport { allContacts } from '../../redux/contacts/contacts.selectors'\r\n\r\n\r\nimport styles from \"./ContactForm.module.css\"\r\n\r\nconst InitialState = {\r\n    name: \"\",\r\n    phone: \"\"\r\n}\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        ...InitialState\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value })\r\n\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (this.props.contacts.some((contact) => contact.name === this.state.name)) {\r\n            alert(`${this.state.name} is already exist`);\r\n            return\r\n        }\r\n        this.props.addContact(this.state)\r\n        this.setState({ ...InitialState })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, phone } = this.state\r\n        return (\r\n            <div className={styles.container}>\r\n                <h2 className={styles.title}>Phonebook</h2>\r\n                <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                    <label htmlFor=\"name\" className={styles.label} >Name</label>\r\n                    <input id=\"name\" type=\"text\" name=\"name\" value={name} onChange={this.handleChange}\r\n                        placeholder=\"Name*\" required className={styles.input} />\r\n\r\n                    <label htmlFor=\"phone\" className={styles.label}>Number</label>\r\n                    <input id=\"phone\" type=\"tel\" name=\"phone\" value={phone} onChange={this.handleChange}\r\n                        placeholder=\"Phone number*\" required className={styles.input} />\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={styles.submitBtn}\r\n                    >\r\n                        Add contact\r\n                </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addContact\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: allContacts(state)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactForm)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { filterChange } from '../../redux/contacts/contacts.actions'\r\n// import { addFilter } from \"../../redux/phoneBook/phone.action\"\r\nimport {getFilter} from \"../../redux/contacts/contacts.selectors\"\r\n\r\nimport styles from \"./ContactFilter.module.css\"\r\n\r\nconst ContactFilter = ({ filterChange, filter }) => {\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor='search' className={styles.label} >Find contacts by name</label>\r\n            <input id=\"search\" type=\"text\" className={styles.input} name=\"search\" value={filter}\r\n                onChange={(event) => { filterChange(event.target.value) }} placeholder=\"Name*\" />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = { filterChange }\r\nconst mapStateToProps = (state) => ({\r\n    filter: getFilter(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ContactFilter)","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addContact, getContacts, removeContact } from '../../redux/contacts/contacts.operations'\r\nimport { filteredContacts } from '../../redux/contacts/contacts.selectors'\r\n\r\nimport styles from \"./ContactList.module.css\"\r\n\r\n\r\nclass ContactList extends PureComponent {\r\n     \r\n\r\n    componentDidMount() {\r\n    this.props.getContacts()\r\n    }\r\n\r\n\r\n    handleDelete = (event) => {\r\n        const { id } = event.target.closest(\"[data-id]\").dataset;\r\n        this.props.removeContact(id)\r\n\r\n    }\r\n     \r\nrender() {\r\n        const {contacts}=this.props\r\n\r\n    return (\r\n\r\n        <>\r\n            {!contacts.length ? <h2 className={styles.noContacts}>There are no added contacts yet</h2> :\r\n                <ul className={styles.list}>\r\n                    {contacts.length>0 && contacts.map((contact) => (\r\n                        <li key={contact.id} data-id={contact.id} className={styles.item}>\r\n                            <div className={styles.textThumb}>\r\n                                <p className={styles.text}>{contact.name}</p>\r\n                            </div>\r\n                            <div className={styles.textThumb}>\r\n                                <p className={styles.text}>{contact.phone}</p>\r\n                            </div>\r\n                            <button type=\"button\" onClick={this.handleDelete} className={styles.deleteBtn}>Delete</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            }\r\n        </>\r\n\r\n    )\r\n}}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: filteredContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addContact,\r\n    getContacts,\r\n    removeContact\r\n    \r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import ContactForm from \"./contactForm/ContactForm\";\nimport ContactFilter from \"./contactsFilter/ContactFilter\";\nimport ContactList from \"./contactList/ContactList.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"thumb\">\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  filterChange,\r\n  removeContactError,\r\n  removeContactSuccess,\r\n  removeContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  getContactsError,\r\n  getContactsSuccess,\r\n  getContactsRequest,\r\n} from \"./contacts.actions\";\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [getContactsSuccess]: (_, action) => [...action.payload],\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [removeContactSuccess]: (state, action) => [\r\n    ...state.filter((contact) => contact.id !== +action.payload),\r\n  ],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterChange]: (_, action) => action.payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [removeContactError]: () => false,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [addContactError]: () => false,\r\n  [addContactSuccess]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [getContactsError]: () => false,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsRequest]: () => true,\r\n});\r\n\r\nconst cleanError = () => null;\r\nconst handleError = (_, action) => action.payload;\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [getContactsRequest]: cleanError,\r\n  [addContactRequest]: cleanError,\r\n  [removeContactRequest]: cleanError,\r\n  [getContactsError]: handleError,\r\n  [addContactError]: handleError,\r\n  [removeContactError]: handleError,\r\n});\r\n\r\nconst phoneReducer = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default phoneReducer;\r\n","import phoneReducer from \"./contacts/contacts.reducer\";\r\n\r\nconst rootReducer = {\r\n  contacts: phoneReducer,\r\n};\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./root.reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1MxNt\",\"textThumb\":\"ContactList_textThumb__1_evj\",\"text\":\"ContactList_text__3CB2R\",\"deleteBtn\":\"ContactList_deleteBtn__1rLky\",\"noContacts\":\"ContactList_noContacts__3IfaV\"};"],"sourceRoot":""}